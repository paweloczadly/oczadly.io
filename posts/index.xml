<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - oczadly.io - production-ready tooling. Clean solutions.</title><link>https://oczadly.io/posts/</link><description>All Posts | oczadly.io - production-ready tooling. Clean solutions.</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>p@oczadly.io (Paweł Oczadły)</managingEditor><webMaster>p@oczadly.io (Paweł Oczadły)</webMaster><lastBuildDate>Fri, 26 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://oczadly.io/posts/" rel="self" type="application/rss+xml"/><item><title>Azure IaC built for your needs</title><link>https://oczadly.io/posts/2025-09-26-azure-iac-built-for-your-needs/</link><pubDate>Fri, 26 Sep 2025 00:00:00 +0000</pubDate><author>Paweł Oczadły</author><guid>https://oczadly.io/posts/2025-09-26-azure-iac-built-for-your-needs/</guid><description><![CDATA[<p>Over the years, I&rsquo;ve had the opportunity to work on many projects and see a wide range of approaches to Infrastructure as Code using <a href="https://developer.hashicorp.com/terraform" target="_blank" rel="noopener noreffer ">Terraform</a>.
Some of them scaled well, others didn&rsquo;t. A few worked great early on — but as the project grew, and new resources had to be added under time pressure and shifting priorities, the codebase became harder and harder to maintain.
It was still &ldquo;infrastructure as code&rdquo;, but each change took longer, and refactoring became too costly to be worth the effort.</p>]]></description></item><item><title>gradle init for Spring Boot</title><link>https://oczadly.io/posts/2025-08-28-gradle-init-for-spring-boot/</link><pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate><author>Paweł Oczadły</author><guid>https://oczadly.io/posts/2025-08-28-gradle-init-for-spring-boot/</guid><description><![CDATA[<h2 id="why-yet-another-gradle-plugin">Why yet another Gradle plugin</h2>
<p>Recently, I wanted to deepen my understanding of <a href="https://docs.gradle.org/9.0.0/userguide/build_scans.html" target="_blank" rel="noopener noreffer ">Build Scans</a>, <a href="https://gradle.com/develocity/" target="_blank" rel="noopener noreffer ">Develocity</a>, and their practical applications, so I started going through the courses on our <a href="https://dpeuniversity.gradle.com/app/catalog" target="_blank" rel="noopener noreffer ">DPE University</a> platform. In my daily work, I interact with <a href="https://gradle.com/develocity/" target="_blank" rel="noopener noreffer ">Develocity</a> from the operational and production side — maintaining <a href="https://github.com/gradle/develocity-oss-projects" target="_blank" rel="noopener noreffer ">open-source instances</a> among other things — so I wanted to better understand the product, especially from the end-user perspective, to support my daily engineering work.</p>]]></description></item><item><title>Starting oczadly.io</title><link>https://oczadly.io/posts/2025-07-05-starting-oczadly-io/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><author>Paweł Oczadły</author><guid>https://oczadly.io/posts/2025-07-05-starting-oczadly-io/</guid><description><![CDATA[<p>Welcome to my blog!</p>
<p>I&rsquo;ve built it to document and share my personal experiences in building solutions for cloud architecture, platform engineering, and AI-native tooling.</p>
<p>It will serve as my <strong>personal engineering notebook</strong> - a place to capture structured learnings, patterns, and decisions—cleanly and accessibly.</p>
<hr>
<h2 id="what-to-expect">What to expect</h2>
<ul>
<li>Practical, implementation-focused posts.</li>
<li>Structured patterns for building scalable platforms.</li>
<li>Insights on Gradle, OpenTofu, GitOps workflows, and AI-native systems.</li>
<li>Clean, minimal, and noise-free.</li>
</ul>
<hr>
<h2 id="lets-get-started">Let’s get started</h2>
<p>Instead of leaving you with just a welcome and a list of future topics, I want to share how this blog is set up: <strong>fully automated and declaratively managed</strong>. Following one of my favourite principles:</p>]]></description></item></channel></rss>